// <auto-generated />
using System;
using BikeStore___Project.Data.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BikeStore___Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BikeStore___Project.Domain.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AccessoryType")
                        .HasColumnType("tinyint");

                    b.Property<int>("BikeId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.ToTable("Accessories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessoryType = (byte)6,
                            BikeId = 1,
                            Brand = "Shimano",
                            Name = "Altus",
                            Weight = 100
                        },
                        new
                        {
                            Id = 2,
                            AccessoryType = (byte)2,
                            BikeId = 2,
                            Brand = "Kring",
                            Name = "Lighting",
                            Weight = 10
                        },
                        new
                        {
                            Id = 3,
                            AccessoryType = (byte)1,
                            BikeId = 2,
                            Brand = "Smith",
                            Name = "Ringer",
                            Weight = 15
                        });
                });

            modelBuilder.Entity("BikeStore___Project.Domain.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("FrameSize")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FrameType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Color = "Red",
                            FrameSize = (byte)3,
                            FrameType = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Color = "Yellow",
                            FrameSize = (byte)3,
                            FrameType = (byte)4
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Color = "Gray",
                            FrameSize = (byte)3,
                            FrameType = (byte)2
                        });
                });

            modelBuilder.Entity("BikeStore___Project.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Road Bike"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mountain Bike"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Touring Bike"
                        });
                });

            modelBuilder.Entity("BikeStore___Project.Domain.Models.Accessory", b =>
                {
                    b.HasOne("BikeStore___Project.Domain.Models.Bike", "Bike")
                        .WithMany("Accessories")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BikeStore___Project.Domain.Models.Bike", b =>
                {
                    b.HasOne("BikeStore___Project.Domain.Models.Category", "Category")
                        .WithMany("Bikes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
